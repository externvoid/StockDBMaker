import Foundation

func foo(_ ustr: String) -> String {
    // !!!: fetch
    var json: String = ""; var cnt: Int = 0
    
    // Get document directory path for error.log
    let documentsPath = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)[0]
    let logPath = documentsPath.appendingPathComponent("error.log")
    
    while true {
        do {
            json = try String(contentsOf: URL(string: ustr)!, encoding: .utf8)
            break
        } catch {
            let errorMessage = "error@fetch: \(error), \(ustr)\n"
            print(errorMessage)
            
            // Append error to log file
            if let data = errorMessage.data(using: .utf8) {
                if let handle = try? FileHandle(forWritingTo: logPath) {
                    handle.seekToEndOfFile()
                    handle.write(data)
                    handle.closeFile()
                } else {
                    try? errorMessage.write(to: logPath, atomically: true, encoding: .utf8)
                }
            }
            
            if cnt < 3 { cnt += 1; sleep(2); continue }
            break
        }
    }
    return json
}
